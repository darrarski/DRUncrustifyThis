#!/bin/bash

# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#  KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# Regex for files that will be processed
FILE_PATTERN='.*\.(h|m|mm)$'

# Source code language
LANGUAGE='OC'

function Usage() {
    echo "Formats Objective-C code using uncrustify."
    echo 
    echo "Usage: uncrustify-objc option"
    echo 
    echo "  uncrustify-objc --all"
    echo "    # Runs on all source files under the current directory"
    echo 
    echo "  uncrustify-objc --changed"
    echo "    # Runs on files changed (staged or not) in git repository"
    echo 
    echo "  uncrustify-objc --staged"
    echo "    # Runs on files staged in git repository"
    echo 
    echo "  uncrustify-objc files"
    echo "    # Runs on the given files"
    echo 
    exit 1
}

function VerifyEnv() {
    if ! which uncrustify > /dev/null; then
        echo "Uncrustify binary not found. Please ensure that it is in your PATH."
        echo "Install via homebrew using: brew install uncrustify"
        exit 1
    fi
}

function ConfigFile() {
    if [[ -f "$(pwd)/uncrustify.cfg" ]]; then
        echo "$(pwd)/uncrustify.cfg"
    elif [[ -f ~/.uncrustify ]]; then
        echo ~/.uncrustify
    elif [[ -f ~/.uncrustify/uncrustify.cfg ]]; then
        echo ~/.uncrustify/uncrustify.cfg
    elif [[ -f "$(dirname $0)/uncrustify.cfg" ]]; then
        echo "$(dirname $0)/uncrustify.cfg"
    else
        echo "Uncrustify configuration file not found."
        echo "The script is expecting a configuration file in one of this locations:"
        echo "- current working directory (uncrustify.cfg)"
        echo "- User home directory (~/.uncrustify or ~/.uncrustify/uncrustify.cfg)"
        echo "- script dicrectory ($(dirname $0)/uncrustify.cfg)"
        exit 1
    fi
}

function FilterFileList() {
    for f in "$@"; do
        # Filter out deleted files.
        [[ ! -e "$f" ]] && continue
        # Filter out files that does not match file pattern
        [[ ! $f =~ $FILE_PATTERN ]] && continue
        # Return file name
        echo $f
    done
}

function FilterAndRun() {
    files=$(FilterFileList "$@")

    if [[ -z "$files" ]]; then
        echo No files to uncrustify.
        exit 2
    else
        CONFIG=$(ConfigFile)
        echo "Using configuration from file:"
        echo $CONFIG
        echo "$files" | xargs uncrustify -l $LANGUAGE --no-backup -c "$CONFIG"
    fi
}

# Fix for running script as a Xcode behaviour
if [[ ! -z $XcodeProjectPath ]]; then
    cd "$XcodeProjectPath/.."
    OPTION="--all"
else
    OPTION="$1"
fi

if [[ "$OPTION" = "--all" ]]; then
    VerifyEnv
    files=$(find .)
    FilterAndRun $files
elif [[ "$OPTION" = "--changed" ]]; then
    VerifyEnv
    files=$(git status --porcelain | sed s:...::)
    FilterAndRun $files
elif [[ "$OPTION" = "--staged" ]]; then
    VerifyEnv
    files=$(git diff --cached --name-only)
    FilterAndRun $files
elif [[ "$1" = -* ]]; then
    Usage
elif [[ ! -z "$@" ]]; then
    VerifyEnv
    FilterAndRun "$@"
else
    Usage
fi
